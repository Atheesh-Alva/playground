name: Build

on:
  push:
    tags:
      # R24-0503/B21/V1.7.12 - APK, AAB, IPA, Play Store - Internal, TestFlight
      - 'R*/B*/V*'
      # AND/B21/V1.7.12 - APK, AAB, Play Store - Internal
      - 'AND/B*/V*'
      # GPS/B21/V1.7.12 - AAB, Play Store - Internal
      - 'GPS/B*/V*'
      # IOS/B21/V1.7.12 - IPA, TestFlight
      - 'IOS/B*/V*'
      # APK/B21/V1.7.12 - APK
      - 'APK/B*/V*'
      # AAB/B21/V1.7.12 - AAB
      - 'AAB/B*/V*'
      # IPA/B21/V1.7.12 - IPA
      - 'IPA/B*/V*'

env:
  BUILD_TYPE: 
  BUILD_NUMBER: 
  BUILD_VERSION: 
  OP_SYS: 

jobs:
  build-data:
    name: Find build data
    runs-on: ubuntu-latest

    steps:
      - name: Extract tag details
        id: set-build-data
        run: |
          build_type=$(echo ${{ github.ref_name }} | cut -d '/' -f 1)
          echo "BUILD_TYPE=$build_type" >> $GITHUB_OUTPUT
          if [ "$build_type" = AND -o "$build_type" = GPS -o "$build_type" = APK -o "$build_type" = AAB ]; then
            echo "OP_SYS=ubuntu-latest" >> $GITHUB_OUTPUT
          else
            echo "OP_SYS=macos-14" >> $GITHUB_OUTPUT
          fi
          build_number=$(echo ${{ github.ref_name }} | cut -d '/' -f 2)
          echo "BUILD_NUMBER=${build_number:1}" >> $GITHUB_OUTPUT
          build_version=$(echo ${{ github.ref_name }} | cut -d '/' -f 3)
          echo "BUILD_VERSION=${build_version:1}" >> $GITHUB_OUTPUT

    outputs:
      BUILD_TYPE: ${{ steps.set-build-data.outputs.BUILD_TYPE }}
      BUILD_NUMBER: ${{ steps.set-build-data.outputs.BUILD_NUMBER }}
      BUILD_VERSION: ${{ steps.set-build-data.outputs.BUILD_VERSION }}
      OP_SYS: ${{ steps.set-build-data.outputs.OP_SYS }}

  logs:
    name: Logs
    needs: build-data
    runs-on: ubuntu-latest

    steps:
        - name: Logs
          run: |
            echo "BUILD_TYPE=${{ env.BUILD_TYPE }}"
            echo "BUILD_NUMBER=${{ env.BUILD_NUMBER }}"
            echo "BUILD_VERSION=${{ env.BUILD_VERSION }}"
            echo "OP_SYS=${{ env.OP_SYS }}"

  build:
    name: Setup & Build
    needs: build-data
    if: false
    runs-on: ${{ needs.build-data.outputs.OP_SYS }}

    steps:
        - name: Checkout Code
          uses: actions/checkout@v3
                
        - name: Setup JAVA for Android
          uses: actions/setup-java@v3
          with:
            distribution: "zulu"
            java-version: "17"
            cache: "gradle"

        - name: Flutter Setup
          uses: subosito/flutter-action@v2
          with:
              channel: "stable"
              flutter-version: ${{ vars.FLUTTER_VERSION }}
              cache: true

        - name: Flutter Clean & Get Packages
          run: |
            flutter clean
            flutter pub get

        - name: Build APK File
          if: ${{ needs.build-data.outputs.BUILD_TYPE == 'APK' }}
          run: |
            flutter build apk \
              --target=lib/main.dart \
              --build-name=${{ needs.build-data.outputs.BUILD_VERSION }} \
              --build-number=${{ needs.build-data.outputs.BUILD_NUMBER }} \
              --release

        - name: Build App Bundle File
          run: |
            flutter build appbundle \
              --release \
              --build-name=${{ needs.build-data.outputs.BUILD_VERSION}} \
              --build-number=${{ needs.build-data.outputs.BUILD_NUMBER }}
     
        - name: Setup Codemagic CLI Tools
          run: pip3 install codemagic-cli-tools --break-system-packages
       
        - name: Upload Build APK to GitHub Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: playground-apk
            path: build/app/outputs/flutter-apk/app-release.apk
      
        - name: Upload Build App Bundle to GitHub Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: playground-aab
            path: build/app/outputs/bundle/release/app-release.aab

  # flutter build ipa \
  #   --release \
  #   --build-name=${{ env.APP_BUILD_VERSION }} \
  #   --build-number=${{ env.APP_BUILD_NUMBER }}
  # cp build/ios/ipa/purpledoor.ipa \
  #   playground-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.ipa
# playground-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.ipa

        # - name: Cache Flutter SDK
        #   uses: actions/cache@v2
        #   with:
        #     path: /opt/hostedtoolcache/flutter
        #     key: flutter-${{ hashFiles('**/pubspec.lock') }}

        # - name: Output Data
        #   id: output-data
        #   run: |
        #     echo "FLUTTER_ROOT=$FLUTTER_ROOT" >> $GITHUB_OUTPUT

    # outputs:
    #   FLUTTER_ROOT: ${{ steps.output-data.outputs.FLUTTER_ROOT }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    env:
      RELEASE_NAME:
    #   FLUTTER_ROOT: ${{ needs.groundwork.outputs.FLUTTER_ROOT }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download APK from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: playground-apk

      - name: Download App Bundle from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: playground-aab
  
      - name: Copy downloaded artifacts
        run: |
          cp ${{ github.workspace }}/app-release.apk \
            playground-apk-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.apk
          cp ${{ github.workspace }}/app-release.aab \
            playground-aab-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.aab

      - name: Create Release Entry
        uses: softprops/action-gh-release@v2
        with:
          files: |
            playground-apk-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.apk
            playground-aab-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.aab
        
        # - name: Setup CodeMagic cli Tools
        #   run: |
        #     pip3 install codemagic-cli-tools --break-system-packages

        # - name: Build iOS ipa
        #   run: |
        #     flutter build ipa
            
        # - name: 'Create release entry'
        #   uses: softprops/action-gh-release@v1
        #   with:
        #     files: |
        #       playground_ios-${{ env.EV_BUILD_VERSION }}_${{ env.EV_BUILD_NUMBER }}.ipa

