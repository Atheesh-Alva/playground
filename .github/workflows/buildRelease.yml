name: Build

on:
  push:
    tags:
      # R24-0503/B21/V1.7.12 - APK, AAB, IPA, PSI, ATF
      - 'R*/B*/V*'
      # AND/B21/V1.7.12 - APK, AAB, PSI
      - 'AND/B*/V*'
      # GPS/B21/V1.7.12 - AAB, PSI
      - 'GPS/B*/V*'
      # IOS/B21/V1.7.12 - IPA, ATF
      - 'IOS/B*/V*'
      # APK/B21/V1.7.12 - APK
      - 'APK/B*/V*'
      # AAB/B21/V1.7.12 - AAB
      - 'AAB/B*/V*'
      # IPA/B21/V1.7.12 - IPA
      - 'IPA/B*/V*'

jobs:
  extract-build-data:
    name: Extract build data
    runs-on: ${{ vars.LINUX_OS }}

    env:
      BUILD_TYPE:

    steps:
      - name: Extract tag details
        id: set-build-data
        run: |
          build_number=$(echo ${{ github.ref_name }} | cut -d '/' -f 2)
          echo "BUILD_NUMBER=${build_number:1}" >> $GITHUB_OUTPUT
          build_version=$(echo ${{ github.ref_name }} | cut -d '/' -f 3)
          echo "BUILD_VERSION=${build_version:1}" >> $GITHUB_OUTPUT
          build_type=$(echo ${{ github.ref_name }} | cut -d '/' -f 1)
          echo "BUILD_TYPE=$build_type" >> $GITHUB_ENV
          echo "BUILD_TYPE=$build_type" >> $GITHUB_OUTPUT
          if [ "$build_type" = AND -o "$build_type" = GPS -o "$build_type" = APK -o "$build_type" = AAB ]; then
            echo "OP_SYS=${{ vars.LINUX_OS }}" >> $GITHUB_OUTPUT
          else
            echo "OP_SYS=${{ vars.MAC_OS }}" >> $GITHUB_OUTPUT
          fi

      - name: Extract build & deploy conditions
        id: set-build-conditions
        run: |
          if ${{ env.BUILD_TYPE == 'AND' }}; then
            echo "BUILD_APK=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_AAB=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_PSI=${{ true }}" >> $GITHUB_OUTPUT
          elif ${{ env.BUILD_TYPE == 'GPS' }}; then
            echo "BUILD_AAB=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_PSI=${{ true }}" >> $GITHUB_OUTPUT
          elif ${{ env.BUILD_TYPE == 'IOS' }}; then
            echo "BUILD_IPA=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_ATF=${{ true }}" >> $GITHUB_OUTPUT
          elif ${{ env.BUILD_TYPE == 'APK' }}; then
            echo "BUILD_APK=${{ true }}" >> $GITHUB_OUTPUT
          elif ${{ env.BUILD_TYPE == 'AAB' }}; then
            echo "BUILD_AAB=${{ true }}" >> $GITHUB_OUTPUT
          elif ${{ env.BUILD_TYPE == 'IPA' }}; then
            echo "BUILD_IPA=${{ true }}" >> $GITHUB_OUTPUT
          else
            echo "BUILD_APK=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_AAB=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_IPA=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_PSI=${{ true }}" >> $GITHUB_OUTPUT
            echo "BUILD_ATF=${{ true }}" >> $GITHUB_OUTPUT
          fi

    outputs:
      BUILD_TYPE: ${{ steps.set-build-data.outputs.BUILD_TYPE }}
      BUILD_NUMBER: ${{ steps.set-build-data.outputs.BUILD_NUMBER }}
      BUILD_VERSION: ${{ steps.set-build-data.outputs.BUILD_VERSION }}
      OP_SYS: ${{ steps.set-build-data.outputs.OP_SYS }}
      BUILD_APK: ${{ steps.set-build-conditions.outputs.BUILD_APK }}
      BUILD_AAB: ${{ steps.set-build-conditions.outputs.BUILD_AAB }}
      BUILD_IPA: ${{ steps.set-build-conditions.outputs.BUILD_IPA }}
      BUILD_PSI: ${{ steps.set-build-conditions.outputs.BUILD_PSI }}
      BUILD_ATF: ${{ steps.set-build-conditions.outputs.BUILD_ATF }}

  logs:
    name: Logs
    needs: extract-build-data
    runs-on: ${{ needs.extract-build-data.outputs.OP_SYS }}

    steps:
        - name: Logs
          run: |
            if ${{ needs.extract-build-data.outputs.BUILD_AAB != '' && needs.extract-build-data.outputs.BUILD_AAB }}; then
              echo "App Bundle file generated!"
            else
              echo "No App Bundle file generated!"
            fi
          
  build:
    name: Setup & Build
    if: false
    needs: extract-build-data
    runs-on: ${{ needs.extract-build-data.outputs.OP_SYS }}

    env:
      BUILD_NAME: playground-V${{ needs.extract-build-data.outputs.BUILD_VERSION }}-Build-${{ needs.extract-build-data.outputs.BUILD_NUMBER }}

    steps:
        - name: Checkout Code
          uses: actions/checkout@v3
                
        - name: Setup JAVA for Android
          uses: actions/setup-java@v3
          with:
            distribution: "zulu"
            java-version: ${{ vars.JAVA_VERSION }}
            cache: "gradle"

        - name: Flutter Setup
          uses: subosito/flutter-action@v2
          with:
              channel: "stable"
              flutter-version: ${{ vars.FLUTTER_VERSION }}
              cache: true

        - name: Flutter Clean & Get Packages
          run: |
            flutter clean
            flutter pub get

        - name: Build APK File
          if: ${{ needs.extract-build-data.outputs.BUILD_APK }}
          run: |
            flutter build apk \
              --target=lib/main.dart \
              --build-name=${{ needs.extract-build-data.outputs.BUILD_VERSION }} \
              --build-number=${{ needs.extract-build-data.outputs.BUILD_NUMBER }} \
              --release

        - name: Build App Bundle File
          if: ${{ needs.extract-build-data.outputs.BUILD_AAB }}
          run: |
            flutter build appbundle \
              --release \
              --build-name=${{ needs.extract-build-data.outputs.BUILD_VERSION}} \
              --build-number=${{ needs.extract-build-data.outputs.BUILD_NUMBER }}
     
        - name: Setup Codemagic CLI Tools
          if: ${{ needs.extract-build-data.outputs.OP_SYS == vars.MAC_OS }}
          run: pip3 install codemagic-cli-tools --break-system-packages
       
        - name: Upload Build APK to GitHub Artifacts
          if: ${{ needs.extract-build-data.outputs.BUILD_APK }}
          uses: actions/upload-artifact@v4
          with:
            name: 'APK_${{ env.BUILD_NAME }}'
            path: build/app/outputs/flutter-apk/app-release.apk
      
        - name: Upload Build App Bundle to GitHub Artifacts
          if: ${{ needs.extract-build-data.outputs.BUILD_AAB }}
          uses: actions/upload-artifact@v4
          with:
            name: 'AAB_${{ env.BUILD_NAME }}'
            path: build/app/outputs/bundle/release/app-release.aab

  # flutter build ipa \
  #   --release \
  #   --build-name=${{ env.APP_BUILD_VERSION }} \
  #   --build-number=${{ env.APP_BUILD_NUMBER }}
  # cp build/ios/ipa/purpledoor.ipa \
  #   playground-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.ipa
# playground-V${{ env.APP_BUILD_VERSION }}-Build-${{ env.APP_BUILD_NUMBER }}.ipa

        - name: Cache Flutter SDK
          uses: actions/cache@v2
          with:
            path: /opt/hostedtoolcache/flutter
            key: flutter-${{ hashFiles('**/pubspec.lock') }}

        - name: Export build name
          id: set-build-name
          run: echo "BUILD_NAME=${{ env.BUILD_NAME }}" >> $GITHUB_OUTPUT

    outputs:
      BUILD-NAME: ${{ steps.set-build-name.outputs.BUILD_NAME }}

  deploy:
    name: Deploy
    needs: [extract-build-data, build] 
    runs-on: ${{ needs.extract-build-data.outputs.OP_SYS }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download APK from Artifacts
        if: ${{ needs.extract-build-data.outputs.BUILD_APK }}
        uses: actions/download-artifact@v4
        with:
          name: 'APK_${{ needs.build.outputs.BUILD-NAME }}'

      - name: Download App Bundle from Artifacts
        if: ${{ needs.extract-build-data.outputs.BUILD_AAB }}
        uses: actions/download-artifact@v4
        with:
          name: 'AAB_${{ needs.build.outputs.BUILD-NAME }}'
  
      - name: Copy downloaded artifacts
        run: |
          if ${{ needs.extract-build-data.outputs.BUILD_APK }}; then
            cp ${{ github.workspace }}/app-release.apk \
              playground-apk-V${{ needs.extract-build-data.outputs.BUILD_VERSION }}-Build-${{ needs.extract-build-data.outputs.BUILD_NUMBER }}.apk
          else
            echo "No APK file generated!"
          fi
          if ${{ needs.extract-build-data.outputs.BUILD_AAB }}; then
            cp ${{ github.workspace }}/app-release.aab \
              playground-aab-V${{ needs.extract-build-data.outputs.BUILD_VERSION }}-Build-${{ needs.extract-build-data.outputs.BUILD_NUMBER }}.aab
          else
            echo "No App Bundle file generated!"
          fi

      - name: Create Release Entry
        uses: softprops/action-gh-release@v2
        with:
          files: |
            playground-apk-V${{ needs.extract-build-data.outputs.BUILD_VERSION }}-Build-${{ needs.extract-build-data.outputs.BUILD_NUMBER }}.apk
            playground-aab-V${{ needs.extract-build-data.outputs.BUILD_VERSION }}-Build-${{ needs.extract-build-data.outputs.BUILD_NUMBER }}.aab
        
        # - name: Setup CodeMagic cli Tools
        #   run: |
        #     pip3 install codemagic-cli-tools --break-system-packages

        # - name: Build iOS ipa
        #   run: |
        #     flutter build ipa
            
        # - name: 'Create release entry'
        #   uses: softprops/action-gh-release@v1
        #   with:
        #     files: |
        #       playground_ios-${{ env.EV_BUILD_VERSION }}_${{ env.EV_BUILD_NUMBER }}.ipa

