env:

# Specify the Flutter version to be used
  FLUTTER_VERSION: "3.22.0"

# Choose the ID for Pull Request Reviewer / Issue Assignee
  OWNER: ${{ secrets.ID_ATHEESH }}

  # Choose any lable from the below options. If you are choosing more than one label, make sure no space is provided.
  # If there is any space in a sibgle label, mark the entire label with quotations like shown below.
  LABEL: enhancement 
  # bug,documentation,duplicate,enhancement,"good first issue","help wanted",invalid,question,wontfix

# ******************** DO NOT ALTER ANY CODE BELOW ********************

name: Development Actions

on:
    push:
        tags:
          - 'PR-*'
          - 'ISSUE-*'

    pull_request_review:
        types: [submitted]

jobs:
    dev-jobs:
        name: PR / Issues
        runs-on: ubuntu-latest
        permissions: write-all

        env:
          ACTION_TYPE:
          SOURCE_BRANCH:
          TITLE:
          BODY:
          FLUTTER_HOME:

        steps:
          - name: Checkout Code
            uses: actions/checkout@v3
            with:
                fetch-depth: 0

          - name: Extract Tag details
            if: github.ref_type == 'tag'
            run: echo "ACTION_TYPE=$(echo ${{ github.ref_name }} | cut -d- -f1)" >> $GITHUB_ENV

          - name: Check PR Review Approved
            if: github.event_name == 'pull_request_review' && github.event.review.state == 'APPROVED'
            run: echo "ACTION_TYPE=PR_MERGE" >> $GITHUB_ENV
    
          - name: Extract Title and Body
            if: ${{ env.ACTION_TYPE == 'PR' || env.ACTION_TYPE == 'ISSUE' }}
            run: |
              # Get the last commit title and description
              last_commit_info=$(git log -1 --format="%s%n%b")
    
              # Output last commit info
              echo "$last_commit_info"

              COMMIT_TITLE=$(git log -1 --pretty=format:'%H %s')
              COMMIT_DESCRIPTION=$(git log -1 --pretty=format:'%H %b')
              echo "TITLE=$COMMIT_TITLE" >> $GITHUB_ENV
              echo "BODY=$COMMIT_DESCRIPTION" >> $GITHUB_ENV

          - name: MS Teams Notification - Flutter Team
            if: always()
            uses: freenet-actions/ms-teams-deploy-card@master
            id: ms_teams_ostrum
            with:
                github-token: ${{ github.token }}
                webhook-uri: ${{ secrets.MS_TEAMS_PLAYGROUND_WEBHOOK_URI }}
                show-on-start: false
                card-layout-exit: complete
                enable-review-diffs-action: false
                include-files: false
                custom-facts: |
                  - name: While Merging PR
                    value: "https://www.ostrumtech.com/"
                custom-actions: |
                  - text: While Merging PR
                    url: "https://www.ostrumtech.com/privacy-policy/"

          - name: Get Source Branch
            if: ${{ env.ACTION_TYPE == 'PR' }}
            run: |
                branch=$(git branch -r --contains ${{ github.ref }} --format "%(refname:lstrip=3)")
                echo "SOURCE_BRANCH=$branch" >> $GITHUB_ENV

        #   - name: Flutter Setup
        #     if: ${{ env.ACTION_TYPE == 'PR' }}
        #     uses: subosito/flutter-action@v2
        #     with:
        #         channel: "stable"
        #         flutter-version: ${{ env.FLUTTER_VERSION }}
        #         cache: true

        # - name: Flutter Clean
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   run: flutter clean

        # - name: Flutter Pub Get
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   run: flutter pub get
        
        # - name: 'Cache pub dependencies'
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   uses: actions/cache@v3
        #   with:
        #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
        #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        #     restore-keys: ${{ runner.os }}-pub-

          - name: Create Pull Request 
            if: ${{ env.ACTION_TYPE == 'PR' }}
            run: |
                gh pr create \
                --base ${{ secrets.PR_DESTINATION_BRANCH }} \
                --head ${{ env.SOURCE_BRANCH }} \
                --title 'AUTO:${{ github.ref_name }}- ${{ env.TITLE }}' \
                --body 'Created by ${{ github.event.sender.login }}: ${{ env.BODY }}' \
                --reviewer ${{ env.OWNER }} \
                --assignee ${{ github.event.sender.login }} \
                --label ${{ env.LABEL }}
            env:
                GITHUB_TOKEN: ${{ github.token }}
        
          - name: Auto-Merge Pull Request on Approval
            if: ${{ env.ACTION_TYPE == 'PR_MERGE' }}
            run: gh pr merge --merge --auto "${{ github.event.pull_request.number }}"
            env:
                GH_TOKEN: ${{ github.token }}

          - name: Create an Issue
            if: ${{ env.ACTION_TYPE == 'ISSUE' }}
            uses: actions-ecosystem/action-create-issue@v1
            with:
                github_token: ${{ secrets.github_token }}
                title: 'AUTO:${{ github.ref_name }}- ${{ env.TITLE }}'
                body: 'Created by ${{ github.event.sender.login }}: ${{ env.BODY }}'
                labels: ${{ env.LABEL }}
                assignees: ${{ env.OWNER }}
