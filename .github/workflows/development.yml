name: Development Actions

env:
    PR_TITLE: Testing PR Creation
    PR_BODY: This is the body!
    REVIEWER: ${{ secrets.PR_REVIEWER_ATHEESH }}
    LABEL: bug # documentation,duplicate,enhancement,"good first issue","help wanted",invalid,question,wontfix
    FLUTTER_VERSION: "3.22.0"

    ISSUE_TITLE: Testing PR Creation
    ISSUE_BODY: This is the body!
    ISSUE_LABEL: bug # documentation,duplicate,enhancement,"good first issue","help wanted",invalid,question,wontfix

on:
    push:
        branches:
          - 'DEV*'
        paths:
          - '.github/workflows/development.yml'

    pull_request_review:
        types: [submitted]

jobs:
    read-json:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Read JSON file
          run: |
            JSON_DATA=$(cat .github/json.json)

        - name: Parse JSON data
          run: |
            JSON_DATA=$(echo "$JSON_DATA" | jq '.')

        - name: Set environment variable
          run: |
            echo "JSON_DATA=$JSON_DATA" >> $GITHUB_ENV

        - name: Print JSON
          run: |
            echo "${{ env.JSON_DATA }}"
      
    CheckAction:
        if: false
        name: Check type of Action
        runs-on: ubuntu-latest

        env:
            ENV_ACTION_TYPE:
            ENV_ISSUE_NUMBER:

        steps:
          - name: Extract from Commit Message
            if: github.event_name == 'push'
            run: echo "ENV_ACTION_TYPE=$(echo ${{ github.event.head_commit.message }} | cut -d- -f1)" >> $GITHUB_ENV

          - name: Check PR Review Approved
            if: github.event_name == 'pull_request_review' && github.event.review.state == 'APPROVED'
            run: echo "ENV_ACTION_TYPE=PR_MERGE" >> $GITHUB_ENV

          - name: Extract Issue Number
            if: ${{ env.ENV_ACTION_TYPE == 'FIXES' }}
            run: echo "ENV_ISSUE_NUMBER=$(echo ${{ github.event.head_commit.message }} | cut -d- -f2)" >> $GITHUB_ENV

          - name: Export Outputs
            id: set-action-type
            run: |
                echo "ACTION_TYPE=${{ env.ENV_ACTION_TYPE }}" >> $GITHUB_OUTPUT
                echo "ISSUE_NUMBER=${{ env.ENV_ISSUE_NUMBER }}" >> $GITHUB_OUTPUT

        outputs:
            ACTION_TYPE: ${{ steps.set-action-type.outputs.ACTION_TYPE }}
            ISSUE_NUMBER: ${{ steps.set-action-type.outputs.ISSUE_NUMBER }}

    CICD:
        name: Development Actions
        needs: CheckAction
        runs-on: ubuntu-latest
        permissions: write-all

        env:
            SOURCE_BRANCH: # DO NOT CHANGE
            ASSIGNEE: ${{ github.event.sender.login }}
            FLUTTER_HOME:
            ACTION_TYPE: ${{ needs.CheckAction.outputs.ACTION_TYPE }}
            ENV_ISSUE_NUMBER: ${{ needs.CheckAction.outputs.ISSUE_NUMBER }}

        steps:
          - name: Checkout Code
            uses: actions/checkout@v3
            with:
                fetch-depth: 0

          - name: MS Teams Notification - Flutter Team
            if: always()
            uses: freenet-actions/ms-teams-deploy-card@master
            id: ms_teams_ostrum
            with:
                github-token: ${{ github.token }}
                webhook-uri: ${{ secrets.MS_TEAMS_PLAYGROUND_WEBHOOK_URI }}
                show-on-start: false
                card-layout-exit: complete
                enable-review-diffs-action: false
                include-files: false
                custom-facts: |
                  - name: While Merging PR
                    value: "https://www.ostrumtech.com/"
                custom-actions: |
                  - text: While Merging PR
                    url: "https://www.ostrumtech.com/privacy-policy/"

          - name: Get Source Branch
            if: ${{ env.ACTION_TYPE == 'PR' }}
            run: |
                branch=$(git branch -r --contains ${{ github.ref }} --format "%(refname:lstrip=3)")
                echo "SOURCE_BRANCH=$branch" >> $GITHUB_ENV

        #   - name: Flutter Setup
        #     if: ${{ env.ACTION_TYPE == 'PR' }}
        #     uses: subosito/flutter-action@v2
        #     with:
        #         channel: "stable"
        #         flutter-version: ${{ env.FLUTTER_VERSION }}
        #         cache: true

        # - name: Flutter Clean
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   run: flutter clean

        # - name: Flutter Pub Get
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   run: flutter pub get
        
        # - name: 'Cache pub dependencies'
            # if: ${{ env.ACTION_TYPE == 'PR' }}
        #   uses: actions/cache@v3
        #   with:
        #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
        #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
        #     restore-keys: ${{ runner.os }}-pub-

          - name: Create Pull Request 
            if: ${{ env.ACTION_TYPE == 'PR' }}
            run: |
                gh pr create \
                --base ${{ secrets.PR_DESTINATION_BRANCH }} \
                --head ${{ env.SOURCE_BRANCH }} \
                --title 'Auto create - ${{ github.ref_name }}: ${{ env.PR_TITLE }}' \
                --body 'Created by ${{ github.event.sender.login }}: ${{ env.PR_BODY }}' \
                --reviewer ${{ env.REVIEWER }} \
                --assignee ${{ env.ASSIGNEE }} \
                --label ${{ env.LABEL }}
            env:
                GITHUB_TOKEN: ${{ github.token }}
        
          - name: Auto-merge Pull Request on Approval
            if: ${{ env.ACTION_TYPE == 'PR_MERGE' }}
            run: gh pr merge --merge --auto "${{ github.event.pull_request.number }}"
            env:
                GH_TOKEN: ${{ github.token }}

          - name: Create an Issue
            if: ${{ env.ACTION_TYPE == 'ISSUE' }}
            uses: actions-ecosystem/action-create-issue@v1
            with:
                github_token: ${{ secrets.github_token }}
                title: 'Auto create - ${{ github.ref_name }}: ${{ env.ISSUE_TITLE }}'
                body: 'Created by ${{ github.event.sender.login }}: ${{ env.ISSUE_BODY }}'
                labels: ${{ env.ISSUE_LABEL }}

          - name: Close Issue
            if: ${{ env.ACTION_TYPE == 'FIXES' }}
            uses: peter-evans/close-issue@v3
            with:
                issue-number: ${{ env.ENV_ISSUE_NUMBER }}
                comment: Auto-closing issue

#######################################################################################

# name: Issue Action

# env:
#   ISSUE_TITLE: Testing PR Creation
#   ISSUE_BODY: This is the body!
#   ISSUE_LABEL: bug # documentation,duplicate,enhancement,"good first issue","help wanted",invalid,question,wontfix

# on:
#   push:
#     tags:
#         - 'Issue-*'
#         # - 'Fixes-*' # To automate fix with merge to default branch

# jobs:
#   IssueAction:
#     name: Issue Action
#     runs-on: ubuntu-latest

#     env:
#       ENV_ACTION_TYPE:
#       ENV_VERSION:

#     steps:
#         - name: Extract Tag details
#           run: |
#             echo "ENV_VERSION=$(echo ${{ github.ref_name }} | sed 's/.*-//')" >> $GITHUB_ENV
#             echo "ENV_ACTION_TYPE=$(echo ${{ github.ref_name }} | sed 's/-.*//')" >> $GITHUB_ENV

#         - name: MS Teams Notification - Flutter Team
#           if: always()
#           uses: freenet-actions/ms-teams-deploy-card@master
#           id: ms_teams_ostrum
#           with:
#             github-token: ${{ github.token }}
#             webhook-uri: ${{ secrets.MS_TEAMS_PLAYGROUND_WEBHOOK_URI }}
#             show-on-start: false
#             card-layout-exit: complete
#             enable-review-diffs-action: false
#             include-files: false
#             custom-facts: |
#               - name: While Merging PR
#                 value: "https://www.ostrumtech.com/"
#             custom-actions: |
#               - text: While Merging PR
#                 url: "https://www.ostrumtech.com/privacy-policy/"

#         - name: Create an Issue
#           if: ${{ env.ENV_ACTION_TYPE == 'Issue' }}
#           uses: actions-ecosystem/action-create-issue@v1
#           with:
#             github_token: ${{ secrets.github_token }}
#             title: 'Auto create - ${{ github.ref_name }}: ${{ env.ISSUE_TITLE }}'
#             body: 'Created by ${{ github.event.sender.login }}: ${{ env.ISSUE_BODY }}'
#             labels: ${{ env.ISSUE_LABEL }}

#         - name: Close Issue
#           if: ${{ env.ENV_ACTION_TYPE == 'Fixes' }}
#           uses: peter-evans/close-issue@v3
#           with:
#             issue-number: ${{ env.ENV_VERSION }}
#             comment: Auto-closing issue

#######################################################################################

# name: Pull Request Actions

# env:
#   FLUTTER_VERSION: "3.22.0"
#   PR_TITLE: Testing PR Creation
#   PR_BODY: This is the body!
#   REVIEWER: ${{ secrets.PR_REVIEWER_ATHEESH }}
#   LABEL: bug # documentation,duplicate,enhancement,"good first issue","help wanted",invalid,question,wontfix

# on:
#   push: # To create PR on tag creation
#     tags:
#     - 'PR-*'

#   # pull_request: # If PR is created to the below branches
#   #   branches: [ main ]

#   pull_request_review: # If any PR review is submitted
#       types: [submitted]

# jobs:
#   PullRequestActions:
#     name: Pull Request Actions
#     runs-on: ubuntu-latest
#     permissions: write-all

#     env:
#       SOURCE_BRANCH: # DO NOT CHANGE
#       ASSIGNEE: ${{ github.event.sender.login }}
#       FLUTTER_HOME: 

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: MS Teams Notification - Flutter Team
#         if: always()
#         uses: freenet-actions/ms-teams-deploy-card@master
#         id: ms_teams_ostrum
#         with:
#           github-token: ${{ github.token }}
#           webhook-uri: ${{ secrets.MS_TEAMS_PLAYGROUND_WEBHOOK_URI }}
#           show-on-start: false
#           card-layout-exit: complete
#           enable-review-diffs-action: false
#           include-files: false
#           custom-facts: |
#             - name: While Merging PR
#               value: "https://www.ostrumtech.com/"
#           custom-actions: |
#             - text: While Merging PR
#               url: "https://www.ostrumtech.com/privacy-policy/"
  
#       - name: Get Source Branch
#         if: github.ref_type == 'tag'
#         run: |
#           branch=$(git branch -r --contains ${{ github.ref }} --format "%(refname:lstrip=3)")
#           echo "SOURCE_BRANCH=$branch" >> $GITHUB_ENV

#       # - name: Flutter Setup
#       #   if: github.ref_type == 'tag'
#       #   uses: subosito/flutter-action@v2
#       #   with:
#       #     channel: "stable"
#       #     flutter-version: ${{ env.FLUTTER_VERSION }}
#       #     cache: true

#       # - name: Flutter Clean
#       #   if: github.ref_type == 'tag'
#       #   run: flutter clean

#       # - name: Flutter Pub Get
#       #   if: github.ref_type == 'tag'
#       #   run: flutter pub get
    
#       # - name: 'Cache pub dependencies'
#       #   if: github.ref_type == 'tag'
#       #   uses: actions/cache@v3
#       #   with:
#       #     path: ${{ env.FLUTTER_HOME }}/.pub-cache
#       #     key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
#       #     restore-keys: ${{ runner.os }}-pub-
  
#       - name: Create Pull Request 
#         if: github.ref_type == 'tag'
#         run: |
#           gh pr create \
#           --base ${{ secrets.PR_DESTINATION_BRANCH }} \
#           --head ${{ env.SOURCE_BRANCH }} \
#           --title 'Auto create - ${{ github.ref_name }}: ${{ env.PR_TITLE }}' \
#           --body 'Created by ${{ github.event.sender.login }}: ${{ env.PR_BODY }}' \
#           --reviewer ${{ env.REVIEWER }} \
#           --assignee ${{ env.ASSIGNEE }} \
#           --label ${{ env.LABEL }}
#         env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       
#       - name: Auto-merge Pull Request on Approval
#         if: github.event_name == 'pull_request_review' && github.event.review.state == 'APPROVED'
#         run: gh pr merge --merge --auto "${{ github.event.pull_request.number }}"
#         env:
#           GH_TOKEN: ${{ github.token }}
