name: Standard

on:
  push:
    tags:
    - 'Run-+[0-9]+[0-9]+[0-9]'

jobs:
  read-json:
    name: Actions
    runs-on: ${{ vars.LINUX_OS }}

    outputs:
      bug: ${{ steps.read-json.outputs.bug }}
      enhancement: ${{ steps.read-json.outputs.enhancement }}
      title: ${{ steps.read-json.outputs.title }}
      comment: ${{ steps.read-json.outputs.comment }}

    env:
      AWS_REGION: 'eu-west-2'
      AWS_API_ID: ${{ secrets.AWS_APPSYNC_API_ID }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read JSON file and set outputs
        id: read-json
        run: |
          json=$(cat lib/workflow.json)
          echo "bug=$(echo $json | jq -r '.bug')" >> $GITHUB_OUTPUT
          echo "enhancement=$(echo $json | jq -r '.enhancement')" >> $GITHUB_OUTPUT
          echo "title=$(echo $json | jq -r '.Title')" >> $GITHUB_OUTPUT
          echo "comment=$(echo $json | jq -r '.Comment')" >> $GITHUB_OUTPUT

  display:
      needs: read-json
      runs-on: ubuntu-latest
      steps:
        - name: Display JSON values
          run: |
            echo "Bug: ${{ needs.read-json.outputs.bug }}"
            echo "Enhancement: ${{ needs.read-json.outputs.enhancement }}"
            echo "Title: ${{ needs.read-json.outputs.title }}"
            echo "Comment: ${{ needs.read-json.outputs.comment }}"







################################################################################################################################################################

      # - name: Checkout code
      #   uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}

      # - name: Fetch AWS AppSync-Schema
      #   run: |
      #     cd assets/raw/release
      #     npm install -g aws-appsync
      #     aws appsync get-introspection-schema \
      #       --api-id $AWS_API_ID \
      #       --format JSON \
      #       --region $AWS_REGION \
      #       --no-include-directives schema.json
      #     cat schema.json
            
      # - name: List CodeCommit Repositories
      #   run: |
      #     aws codecommit list-repositories

    # - name: Push to CodeCommit
    #   run: |
    #     git remote add codecommit https://${{ secrets.CODECOMMIT_REPO_URL }}
    #     git push codecommit master --force

    #   - name: Fetch AWS AppSync-Schema
    #     run: |
    #       cd assets/raw/release
    #       npm install -g aws-appsync
    #       aws appsync get-introspection-schema \
    #         --api-id $AWS_API_ID \
    #         --format JSON \
    #         --region $AWS_REGION \
    #         --no-include-directives schema.json
    #       cat schema.json
          
    #   - name: Setup JAVA for Android
    #     uses: actions/setup-java@v3
    #     with:
    #       distribution: "zulu"
    #       java-version: ${{ vars.JAVA_VERSION }}
    #       cache: "gradle"

    #   - name: Flutter Setup
    #     uses: subosito/flutter-action@v2
    #     with:
    #         channel: "stable"
    #         flutter-version: ${{ vars.FLUTTER_VERSION }}
    #         cache: true

    #   - name: Flutter Clean & Get Packages
    #     run: |
    #       flutter clean
    #       flutter pub get

    #   - name: Cache Flutter SDK
    #     uses: actions/cache@v3
    #     with:
    #       path: /opt/hostedtoolcache/flutter
    #       key: flutter-${{ hashFiles('**/pubspec.lock') }}

    #   - name: Build APK File
    #     run: |
    #       flutter build apk \
    #         --target=lib/main.dart \
    #         --release

    #   - name: Upload APK to GitHub Artifacts
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: 'APK_TEST'
    #       path: build/app/outputs/flutter-apk/app-release.apk
